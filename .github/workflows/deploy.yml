name: Deploy to Heroku

on:
  push:
    branches:
      - main  # Déclenche le workflow uniquement sur la branche "main"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Vérifiez le code du dépôt
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Cloner le dépôt en entier pour éviter un "shallow clone"

      # Installez distutils (nécessaire pour certaines dépendances)
      - name: Install distutils
        run: sudo apt-get update && sudo apt-get install -y python3-distutils

      # Configurez l'environnement pour exécuter les tests
      - name: Set up Python (ou Node.js, ou autre selon votre projet)
        uses: actions/setup-python@v4  # Remplacez avec setup-node ou autre si nécessaire
        with:
          python-version: '3.9.20'  # Remplacez par votre version Python ou Node.js

      # Installez les dépendances nécessaires pour exécuter les tests
      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Pour Python, ou `npm install` si c'est un projet Node.js

      # Exécuter les tests
      - name: Run tests
        run: |
          pytest  # Si vous utilisez Python avec pytest, ou `npm test` pour Node.js
          
      # Vérifiez si les tests ont échoué et arrêtez le déploiement si nécessaire
      - name: Fail if tests fail
        run: exit 1  # Si les tests échouent, le workflow échouera et le déploiement sera annulé

      # Configurez Git pour utiliser Heroku comme distant
      - name: Set up Heroku remote
        run: git remote add heroku https://git.heroku.com/project-science-free.git

      # Authentifiez-vous auprès de Heroku en utilisant votre clé API
      - name: Authenticate with Heroku
        run: |
          echo "machine git.heroku.com" >> ~/.netrc
          echo "  login ${{ secrets.HEROKU_EMAIL }}" >> ~/.netrc
          echo "  password ${{ secrets.HEROKU_API_KEY }}" >> ~/.netrc
        env:
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      # Tirez les modifications du dépôt distant Heroku pour éviter les conflits
      - name: Pull changes from Heroku
        run: git fetch --unshallow heroku main || true  # Récupérer l'historique complet de Heroku

      # Poussez les changements locaux vers Heroku
      - name: Push changes to Heroku
        run: git push heroku main --force

