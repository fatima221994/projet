name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Vérification du dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configuration de Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # 3. Installation des dépendances
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r api/requirements.txt

      # 4. Exécution des tests unitaires
     # - name: Run unit tests
      #  run: python -m unittest discover tests

      # 5. Conteneurisation avec Docker
      - name: Build Docker image
        run: docker build -t my-api:latest .

      # 6. Connexion à DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Pousser l'image Docker
      - name: Push Docker image
        run: |
          docker tag my-api:latest <dockerhub-username>/my-api:latest
          docker push <dockerhub-username>/my-api:latest

      # 8. Déploiement sur un Cloud (exemple : Render)
      - name: Deploy to Render
        run: |
          curl -X POST "https://api.render.com/deploy" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"

